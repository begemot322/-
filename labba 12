#(|х^(2n-1)|)/(2n-1)!,
import random
import numpy as np
from decimal import Decimal, getcontext

def generate_matrix():
    k = random.randint(2, 8)
    x = np.random.randint(-1, 2, (k, k))
    if abs(np.linalg.det(x)) == 0:
        return generate_matrix()
    else:
        return x

def calculate_factorial(n):
    result = 1
    for i in range(1, 2 * n):
        result *= i
    return result

def sum(x, t):
    n = 1
    result = 0
    while True:
        result_matrix = np.linalg.matrix_power(x, 2 * n - 1)
        curr_term = Decimal(np.linalg.det(result_matrix)) / Decimal(calculate_factorial(n))
        result += ((-1) ** n) * curr_term
        if abs(curr_term) < 10**(-t):
            break
        n += 1

    return result

t = int(input('Введите число t, которое является точностью вычисления: '))
if t < 1:
    t = int(input('Вы ввели маленькое число, введите t больше или равное 1: '))

x = generate_matrix()
print(f"Матрица \n {x}")

getcontext().prec = t
sum_value = sum(x, t)
print(f"Сумма ряда: {sum_value:.{t}f}")
