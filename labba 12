#(|х(2n-1)|)/(2n-1)!,

import random
import numpy as np
from decimal import Decimal, getcontext
from math import factorial

# Генерация случайного значения k и матрицы x
def generate_matrix():
    k = random.randint(2, 8)
    x = np.random.randint(-1, 2, (k, k))
    if abs(np.linalg.det(x)) == 0:
        return generate_matrix()
    else:
        return x

def sum(x, t):
    n = 1
    result = 0
    sign = -1
    while True:
        curr_term = Decimal(np.linalg.det((x))**(2*n-1)) / Decimal(factorial(2*n-1))  # Вычисляем текущий член ряда
        result += sign * curr_term  # Прибавляем его к результату с учетом знака
        # Проверка на достижение точности
        if abs(curr_term) < 10**(-t):
            break
        n += 1
        sign *= -1

    return result

# Ввод точности вычислений
t = int(input('Введите число t, которое является точностью вычисления: '))
if t < 1:
    t = int(input('Вы ввели маленькое число, введите t больше или равное 1: '))

x = generate_matrix()
print(f"Матрица \n {x}")

getcontext().prec = t
sum_value = sum(x, t)
print(f"Сумма ряда: {sum_value:.{t}f}")
